set ideajoin
set keep-english-in-normal


set relativenumber
set ignorecase

set clipboard+=unnamed
set scrolloff=13
set history=200
set notimeout
set incsearch
set hlsearch
set which-key
let mapleader=" "

set easymotion

Plug 'preservim/nerdtree'

nmap <Enter> o<ESC>
vmap <tab> >gv
vmap <s-tab> <gv
vmap p "_dp

let g:WhichKeyDesc_Debug = "<leader>c Chatops"
nmap <leader>cc <action>(Tool_External Tools_chat)
nmap <leader>cb <action>(Tool_External Tools_black)

let g:WhichKeyDesc_Debug = "<leader>d Debug"
nmap <leader>dm <action>(ToggleLineBreakpoint)
nmap <leader>de <action>(EditBreakpoint)

let g:WhichKeyDesc_Explorer = "<leader>e Explorer"
nmap <leader>e <action>(ActivateProjectToolWindow)

let g:WhichKeyDesc_FileOrFormat = "<leader>f FileOrFormat"
" fl: file location
nmap <leader>fl <action>(SelectInProjectView)
nmap <leader>fc <action>(ReformatCode)
nmap <leader>fs <action>(FileStructurePopup)
nmap <leader>fp <action>(FindInPath)

let g:WhichKeyDesc_Goto = "<leader>g GotoOrGit"
nmap gb <action>(Back)
nmap gf <action>(Forward)
nmap ge <action>(GotoNextError)


let g:WhichKeyDesc_NoHighlight = "<leader>n NoHighlight"
nmap <leader>nl :nohlsearch<CR>

let g:WhichKeyDesc_Popup = "<leader>p Popup"
nmap <leader>pa <action>(GotoAction)
nmap <leader>pf <action>(GotoFile)
nmap <leader>pd <action>(QuickJavaDoc)
nmap <leader>pp <action>(ParameterInfo)


" run, debug, stop run, reload, recent
let g:WhichKeyDesc_Run = "<leader>r Run"
nmap <leader>rr <action>(RunClass)
nmap <leader>rd <action>(DebugClass)
nmap <leader>rs <action>(Stop)
nmap <leader>rv <action>(IdeaVim.ReloadVimRc.reload)
nmap <leader>rp <action>(ManageRecentProjects)
nmap <leader>rf <action>(RecentFiles)
nmap <leader>ru <action>(PublishGroup.Upload)


let g:WhichKeyDesc_Terminal = "<leader>t Terminal"
nmap <leader>t <action>(ActivateTerminalToolWindow)

let g:WhichKeyDesc_Window = "<leader>w Window"
nmap <leader>wa <action>(UnsplitAll) \| <action>(HideAllWindows)
nmap <leader>wb <action>(ActivateBookmarksToolWindow)
nmap <leader>wc <action>(CloseEditor)
nmap <leader>wh <action>(HideActiveWindow)
nmap <leader>wp <action>(OpenProjectWindows)
nmap <leader>wr <action>(Refactorings.QuickListPopupAction)
nmap <leader>ws <action>(Macro.SplitVertically)
nmap <leader>wz <action>(ToggleZenMode)
nmap <leader>wo <action>(CloseAllEditorsButActive)


let g:WhichKeyDesc_SoftWrap = "<leader>s Soft wrap"
nmap <leader>sw <action>(EditorToggleUseSoftWraps)

let g:WhichKeyDesc_Fold = "<leader>z Fold"
nmap <leader>zc <action>(CollapseAllRegions)
nmap <leader>zo <action>(ExpandAllRegions)

nmap [[ <action>(MethodUp)
nmap ]] <action>(MethodDown)


vmap <leader>wr <action>(Refactorings.QuickListPopupAction)

